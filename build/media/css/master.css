/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
a {
  text-decoration: none;
}
a:active,
a:focus,
a:hover {
  text-decoration: none;
}
/*!
 * Preboot v2
 *
 * Open sourced under MIT license by @mdo.
 * Some variables and mixins from Bootstrap (Apache 2 license).
 */
body {
  color: #4d4d4d;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.4;
}
a {
  color: #428bca;
  text-decoration: none;
}
a:hover {
  color: #2a6496;
  text-decoration: underline;
}
.page {
  width: 100%;
  height: 100%;
  max-width: 720px;
  padding: 20px;
  background-color: burlywood;
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.date-picker-widget {
  width: 100%;
  max-width: 700px;
  padding: 12px;
  background-color: #e9d0af;
  display: block;
  margin-left: auto;
  margin-right: auto;
  *zoom: 1;
}
.date-picker-widget:before,
.date-picker-widget:after {
  content: " ";
  display: table;
  line-height: 0;
}
.date-picker-widget:after {
  clear: both;
}
.date-picker-widget .legend {
  float: left;
}
.date-picker-widget .legend li {
  margin-right: 5px;
}
.date-picker-widget .legend li:before {
  content: "";
  width: 10px;
  height: 10px;
  display: inline-block;
  margin-right: 3px;
  border-radius: 5px;
}
.date-picker-widget .legend li.delivery:before {
  background-color: #5cb85c;
}
.date-picker-widget .legend li.hold:before {
  background-color: #d9534f;
}
.date-picker-widget .legend li.available:before {
  background-color: #5bc0de;
}
.date-picker-widget .legend .instructions {
  clear: both;
  margin-top: 4px;
}
.date-picker-widget button {
  float: right;
}
.date-picker-widget li {
  display: inline-block;
}
.date-picker {
  width: 200px;
  height: 200px;
  margin-bottom: 12px;
  padding-top: 12px;
  background-color: #fff;
}
.date-picker .month {
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  color: #fff;
  margin: 0 12px;
  background-color: #f0ad4e;
}
.date-picker .days,
.date-picker .dates {
  margin: 6px 0 0 8px;
}
.date-picker .days li,
.date-picker .dates li {
  width: 23px;
  height: 23px;
  text-align: center;
  font-size: 11.9px;
}
.date-picker .dates li {
  height: 19px;
  padding-top: 4px;
  margin: 2px 0;
  cursor: pointer;
  background-color: #fff;
  border-radius: 15px;
}
.date-picker .dates li:hover {
  background-color: #5bc0de;
}

/*# sourceMappingURL=data:application/json;base64, */